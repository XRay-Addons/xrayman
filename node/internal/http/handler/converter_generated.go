// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package handler

import (
	models "github.com/XRay-Addons/xrayman/node/internal/models"
	gen "github.com/XRay-Addons/xrayman/node/pkg/api/http/gen"
)

func ConvertEditUsersRequest(source *gen.EditUsersRequest) *models.EditUsersParams {
	var pModelsEditUsersParams *models.EditUsersParams
	if source != nil {
		var modelsEditUsersParams models.EditUsersParams
		if (*source).Add != nil {
			modelsEditUsersParams.Add = make([]models.User, len((*source).Add))
			for i := 0; i < len((*source).Add); i++ {
				modelsEditUsersParams.Add[i] = apiUserToModelsUser((*source).Add[i])
			}
		}
		if (*source).Remove != nil {
			modelsEditUsersParams.Remove = make([]models.User, len((*source).Remove))
			for j := 0; j < len((*source).Remove); j++ {
				modelsEditUsersParams.Remove[j] = apiUserToModelsUser((*source).Remove[j])
			}
		}
		pModelsEditUsersParams = &modelsEditUsersParams
	}
	return pModelsEditUsersParams
}
func ConvertStartRequest(source *gen.StartRequest) *models.StartParams {
	var pModelsStartParams *models.StartParams
	if source != nil {
		var modelsStartParams models.StartParams
		if (*source).Users != nil {
			modelsStartParams.Users = make([]models.User, len((*source).Users))
			for i := 0; i < len((*source).Users); i++ {
				modelsStartParams.Users[i] = apiUserToModelsUser((*source).Users[i])
			}
		}
		pModelsStartParams = &modelsStartParams
	}
	return pModelsStartParams
}
func ConvertStartResult(source *models.StartResult) *gen.StartResponse {
	var pApiStartResponse *gen.StartResponse
	if source != nil {
		var apiStartResponse gen.StartResponse
		apiStartResponse.ClientCfg = modelsClientCfgToApiClientCfg((*source).ClientCfg)
		pApiStartResponse = &apiStartResponse
	}
	return pApiStartResponse
}
func apiUserToModelsUser(source gen.User) models.User {
	var modelsUser models.User
	modelsUser.Name = source.Name
	modelsUser.VlessUUID = source.VlessUUID
	return modelsUser
}
func modelsClientCfgToApiClientCfg(source models.ClientCfg) gen.ClientCfg {
	var apiClientCfg gen.ClientCfg
	apiClientCfg.Template = source.Template
	apiClientCfg.UserNameField = source.UserNameField
	apiClientCfg.VlessUUIDField = source.VlessUUIDField
	return apiClientCfg
}
