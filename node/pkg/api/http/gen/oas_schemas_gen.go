// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"

	"github.com/go-faster/errors"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/ClientCfg
type ClientCfg struct {
	Template       string `json:"template"`
	UserNameField  string `json:"userNameField"`
	VlessUUIDField string `json:"vlessUUIDField"`
}

// GetTemplate returns the value of Template.
func (s *ClientCfg) GetTemplate() string {
	return s.Template
}

// GetUserNameField returns the value of UserNameField.
func (s *ClientCfg) GetUserNameField() string {
	return s.UserNameField
}

// GetVlessUUIDField returns the value of VlessUUIDField.
func (s *ClientCfg) GetVlessUUIDField() string {
	return s.VlessUUIDField
}

// SetTemplate sets the value of Template.
func (s *ClientCfg) SetTemplate(val string) {
	s.Template = val
}

// SetUserNameField sets the value of UserNameField.
func (s *ClientCfg) SetUserNameField(val string) {
	s.UserNameField = val
}

// SetVlessUUIDField sets the value of VlessUUIDField.
func (s *ClientCfg) SetVlessUUIDField(val string) {
	s.VlessUUIDField = val
}

// Ref: #/components/schemas/EditUsersRequest
type EditUsersRequest struct {
	Add    []User `json:"add"`
	Remove []User `json:"remove"`
}

// GetAdd returns the value of Add.
func (s *EditUsersRequest) GetAdd() []User {
	return s.Add
}

// GetRemove returns the value of Remove.
func (s *EditUsersRequest) GetRemove() []User {
	return s.Remove
}

// SetAdd sets the value of Add.
func (s *EditUsersRequest) SetAdd(val []User) {
	s.Add = val
}

// SetRemove sets the value of Remove.
func (s *EditUsersRequest) SetRemove(val []User) {
	s.Remove = val
}

// Empty response body.
// Ref: #/components/schemas/EmptyResponse
type EmptyResponse struct{}

// Ref: #/components/schemas/Error
type Error struct {
	Message string       `json:"message"`
	Details OptNilString `json:"details"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() OptNilString {
	return s.Details
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val OptNilString) {
	s.Details = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Status of the service.
// Ref: #/components/schemas/ServiceStatus
type ServiceStatus string

const (
	ServiceStatusStopped ServiceStatus = "stopped"
	ServiceStatusRunning ServiceStatus = "running"
)

// AllValues returns all ServiceStatus values.
func (ServiceStatus) AllValues() []ServiceStatus {
	return []ServiceStatus{
		ServiceStatusStopped,
		ServiceStatusRunning,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ServiceStatus) MarshalText() ([]byte, error) {
	switch s {
	case ServiceStatusStopped:
		return []byte(s), nil
	case ServiceStatusRunning:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ServiceStatus) UnmarshalText(data []byte) error {
	switch ServiceStatus(data) {
	case ServiceStatusStopped:
		*s = ServiceStatusStopped
		return nil
	case ServiceStatusRunning:
		*s = ServiceStatusRunning
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/StartRequest
type StartRequest struct {
	Users []User `json:"users"`
}

// GetUsers returns the value of Users.
func (s *StartRequest) GetUsers() []User {
	return s.Users
}

// SetUsers sets the value of Users.
func (s *StartRequest) SetUsers(val []User) {
	s.Users = val
}

// Ref: #/components/schemas/StartResponse
type StartResponse struct {
	ClientCfg ClientCfg `json:"clientCfg"`
}

// GetClientCfg returns the value of ClientCfg.
func (s *StartResponse) GetClientCfg() ClientCfg {
	return s.ClientCfg
}

// SetClientCfg sets the value of ClientCfg.
func (s *StartResponse) SetClientCfg(val ClientCfg) {
	s.ClientCfg = val
}

// Ref: #/components/schemas/StatusResponse
type StatusResponse struct {
	ServiceStatus ServiceStatus `json:"serviceStatus"`
}

// GetServiceStatus returns the value of ServiceStatus.
func (s *StatusResponse) GetServiceStatus() ServiceStatus {
	return s.ServiceStatus
}

// SetServiceStatus sets the value of ServiceStatus.
func (s *StatusResponse) SetServiceStatus(val ServiceStatus) {
	s.ServiceStatus = val
}

// Ref: #/components/schemas/User
type User struct {
	Name      string `json:"name"`
	VlessUUID string `json:"vlessUUID"`
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// GetVlessUUID returns the value of VlessUUID.
func (s *User) GetVlessUUID() string {
	return s.VlessUUID
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// SetVlessUUID sets the value of VlessUUID.
func (s *User) SetVlessUUID(val string) {
	s.VlessUUID = val
}
